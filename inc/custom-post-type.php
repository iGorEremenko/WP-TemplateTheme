<?php
/**
 * Регистрация собственных кастомных типов постов
 * на данном примере это будут посты (обьявления)
 * ---------------------------------------------------------------------------------------------------------------------
 */
add_action( 'init', 'true_register_post_type_init' ); // Использовать функцию только внутри хука init

function true_register_post_type_init() {

	$labels = array(
		'name' => 'Обьявления',// основное название для типа записи, обычно во множественном числе.
		'singular_name' => 'Обьявление', // название для одной записи этого типа.
		'add_new' => 'Добавить Обьявление',// текст для добавления новой записи, как "добавить новый" у постов в админ-панели.
		'add_new_item' => 'Добавить новое Обьявление',// текст заголовка у вновь создаваемой записи в админ-панели.
		'edit_item' => 'Редактировать Обьявление',// текст для редактирования типа записи.
		'new_item' => 'Новае Обьявление',// текст новой записи.
		'all_items' => 'Все Обьявления',// Все записи. По умолчанию равен menu_name
		'view_item' => 'Просмотреть Обьявлений на сайте',// текст для просмотра записи этого типа.
		'search_items' => 'Искать Обьявление',// текст для поиска по этим типам записи.
		'not_found' =>  'Обьявлений не найдено.',// текст, если в результате поиска ничего не было найдено.
		'not_found_in_trash' => 'В корзине нет Обьявлений.',// текст, если не было найдено в корзине.
		'menu_name' => 'Обьявления', // Название меню. По умолчанию равен name.
        'insert_into_item' => 'Вставить в запись', // Вставить в запись
        'uploaded_to_this_item' => 'Загружено для этой записи',// Загружено для этой записи
        'featured_image' => 'Миниатюра записи',// Миниатюра записи
        'set_featured_image' => 'Установить миниатюру записи',// Установить миниатюру записи
        'remove_featured_image' => 'Удалить миниатюру записи',// Удалить миниатюру записи
        'use_featured_image' => 'Использовать как миниатюру записи',// Использовать как миниатюру записи
        'filter_items_list' => 'Фильтровать список записей',// Фильтровать список записей
        'items_list_navigation' => 'Навигация по записям',// Навигация по записям
        'items_list' => 'Список записей',// Список записей
        'attributes' => 'рубрики',// Название для метабокса атрибутов записи
	);

	$args = array(
		'labels' => $labels,
		'public' => true,
		'show_ui' => true, // показывать интерфейс в админке
		'has_archive' => true,
		'menu_icon' => get_stylesheet_directory_uri() .'/img/custom_post_icon.png', // путь к иконке для админки
		'menu_position' => 20, // порядок в меню админки
        'supports' => array( 'title', 'editor', 'comments', 'author', 'thumbnail', 'excerpt', 'trackbacks', 'revisions'),
        'taxonomies' => array( 'category'), // указывает что у данного типа поста будут рубрики
        'show_in_admin_bar' => true, //Сделать этот тип доступным из админ бара.
        'show_in_nav_menus' => true, //Включить возможность выбирать этот тип записи в меню навигации.
        'exclude_from_search' => false //Исключить ли этот тип записей из поиска по сайту. 1 (true) - да, 0 (false) - нет.

    );

	register_post_type('the_name_post_type', $args); //регистрация названия типа постов для кастомного поста
    flush_rewrite_rules(); // перезагрузка урлов для правильного построения ЧПУ wp после регистрации типа поста
}


/************** ------- Тексты уведомлений в админке для кастомного типа постов ------- **************/
add_filter( 'post_updated_messages', 'true_post_type_messages' );

function true_post_type_messages( $messages ) {
	global $post, $post_ID;

	$messages['the_name_post_type'] = array( // the_name_post_type - название созданного нами типа записей
		0 => '', // Данный индекс не используется.
		1 => sprintf( 'Обьявление обновлено. <a href="%s">Просмотреть</a>', esc_url( get_permalink($post_ID) ) ),
		2 => 'Параметр обновлён.',
		3 => 'Параметр удалён.',
		4 => 'Обьявление обновлено',
		5 => isset($_GET['revision']) ? sprintf( 'Обьявление восстановлено из редакции: %s',
            wp_post_revision_title( (int) $_GET['revision'], false ) ) : false,
		6 => sprintf( 'Обьявление опубликовано на сайте. <a href="%s">Просмотреть</a>', esc_url( get_permalink($post_ID) ) ),
		7 => 'Обьявление сохранено.',
		8 => sprintf( 'Отправлено на проверку. <a target="_blank" href="%s">Просмотреть</a>',
            esc_url( add_query_arg( 'preview', 'true', get_permalink($post_ID) ) ) ),
		9 => sprintf( 'Запланировано на публикацию: <strong>%1$s</strong>. <a target="_blank" href="%2$s">Просмотреть</a>',
            date_i18n( __( 'M j, Y @ G:i' ), strtotime( $post->post_date ) ), esc_url( get_permalink($post_ID) ) ),
		10 => sprintf( 'Черновик обновлён. <a target="_blank" href="%s">Просмотреть</a>',
            esc_url( add_query_arg( 'preview', 'true', get_permalink($post_ID) ) ) ),
	);

	return $messages;
}

/************** ------- Вкладка «Помощь» ------- **************/

function true_post_type_help_tab() {

	$screen = get_current_screen();

	// Прекращаем выполнение функции, если находимся на страницах других типов постов
	if ( 'the_name_post_type' != $screen->post_type ) //нужно указать название кастомного типа постов
		return;

	// Массив параметров для первой вкладки
	$args = array(
		'id'      => 'tab_1',
		'title'   => 'Обзор',
		'content' => '<h3>Обзор</h3><p>Содержимое первой вкладки.</p>'
	);

	// Добавляем вкладку
	$screen->add_help_tab( $args );

	// Массив параметров для второй вкладки
	$args = array(
		'id'      => 'tab_2',
		'title'   => 'Доступные действия',
		'content' => '<h3>Доступные действия с типом постов &laquo;' . $screen->post_type . '&raquo;</h3><p>Содержимое второй вкладки</p>'
	);

	// Добавляем вторую вкладку
	$screen->add_help_tab( $args );

}

add_action('admin_head', 'true_post_type_help_tab');



/************** ------- Привязка таксономии для кастомного поста ------- **************/
add_action( 'init', 'post_tag_for_custom_post' );
function post_tag_for_custom_post(){ // в данном случае привязываются рубрики к кастомному посту
    register_taxonomy_for_object_type( 'category', 'the_name_post_type');
} // указываем название таксономии и тип поста к которому она будет привязана




/************** ------- Регистрация таксономии для кастомного поста ------- **************/
// хук, через который подключается функция
// регистрирующая новые таксономии (create_custom_taxonomies)
add_action( 'init', 'create_custom_taxonomies' );

// функция, создающая новую таксономию "Жанр" и "writers" для постов типа "custom"
function create_custom_taxonomies(){
    // определяем заголовки для 'genre'
    $labels = array(
        'name' => _x( 'Жанры', 'Главное название тасономии' ), // Имя таксономии, обычно во множественном числе.
        'singular_name' => _x( 'Жанр', 'Название одной таксономии' ), // Название для одного элемента этой таксономии.
        'search_items' =>  __( 'Поиск по Жанрам' ), // Текст для поиска элемента таксономии.
        'all_items' => __( 'Все Жанры' ), // Текст для всех элементов.
        'parent_item' => __( 'Родительский жанр' ), // Текст для родительского элемента таксономии.
        'parent_item_colon' => __( 'Родительский жанр:' ), // Текст для родительского элемента таксономии, тоже что и parent_item но с двоеточием в конце.
        'edit_item' => __( 'Редактировать жанр' ), // Текст для редактирования элемента.
        'update_item' => __( 'Обновить жанр' ), // Текст для обновления элемента.
        'add_new_item' => __( 'Добавить новый жанр' ), // Текст для добавления нового элемента таксономии.
        'view_item' => __( 'Посмотреть жанр' ), // Текст для просмотра термина таксономии. По умолчанию: "Посмотреть категорию"
        'new_item_name' => __( 'Создать новый жанр' ), // Текст для создания нового элемента таксономии.
        'menu_name' => __( 'Жанр' ), // Текст для названия меню.
    );

    // Добавляем древовидную таксономию 'genre' (как категории)
    register_taxonomy('the_name_taxonomy', array('the_name_post_type'), array( // регистрируем таксономию the_name_taxonomy для кастом-поста the_name_post_type
        'hierarchical' => true, // древовидное вложение - если его убрать то выводиться будут не рубриками а метками
        'labels' => $labels, // берется с name
        'show_ui' => true, // показать в админке
        'query_var' => true, // подключение параметра rewrite
        'rewrite' => array( 'slug' => 'the_name_post_type' ),
    ));
}




